{
  "hash": "a93ffc780ab9d13aadc1e6a52ab23f1d",
  "result": {
    "markdown": "# Problem 9 {.unnumbered}\n\n::: {.callout-note icon=false}\n## Problem\n\n<p>A Pythagorean triplet is a set of three natural numbers, $a \\lt b \\lt c$, for which,\n$a^2 + b^2 = c^2.$</p>\n<p>For example, $3^2 + 4^2 = 9 + 16 = 25 = 5^2$.</p>\n<p>There exists exactly one Pythagorean triplet for which $a + b + c = 1000$.<br>Find the product $abc$.</p>\n:::\n\n### Julia\n\n::: {.cell execution_count=1}\n``` {.julia .cell-code}\nfunction p9()\n    for a ∈ 1:999\n        for b ∈ 1:999            \n            c = 1000 - a - b\n            c >= 1 || continue\n            a^2 + b^2 == c^2 || continue                        \n            return a, b, c\n        end\n    end\nend;\n\np9()\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\n(200, 375, 425)\n```\n:::\n:::\n\n\n::: {.cell execution_count=2}\n``` {.julia .cell-code}\nusing BenchmarkTools;\n@benchmark p9()\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre>BenchmarkTools.Trial: 10000 samples with 1 evaluation.\n Range <span class=\"ansi-bright-black-fg\">(</span><span class=\"ansi-cyan-fg ansi-bold\">min</span> … <span class=\"ansi-magenta-fg\">max</span><span class=\"ansi-bright-black-fg\">):  </span><span class=\"ansi-cyan-fg ansi-bold\">91.444 μs</span> … <span class=\"ansi-magenta-fg\">152.590 μs</span>  <span class=\"ansi-bright-black-fg\">┊</span> GC <span class=\"ansi-bright-black-fg\">(</span>min … max<span class=\"ansi-bright-black-fg\">): </span>0.00% … 0.00%\n Time  <span class=\"ansi-bright-black-fg\">(</span><span class=\"ansi-blue-fg ansi-bold\">median</span><span class=\"ansi-bright-black-fg\">):     </span><span class=\"ansi-blue-fg ansi-bold\">92.125 μs               </span><span class=\"ansi-bright-black-fg\">┊</span> GC <span class=\"ansi-bright-black-fg\">(</span>median<span class=\"ansi-bright-black-fg\">):    </span>0.00%\n Time  <span class=\"ansi-bright-black-fg\">(</span><span class=\"ansi-green-fg ansi-bold\">mean</span> ± <span class=\"ansi-green-fg\">σ</span><span class=\"ansi-bright-black-fg\">):   </span><span class=\"ansi-green-fg ansi-bold\">92.851 μs</span> ± <span class=\"ansi-green-fg\">  6.246 μs</span>  <span class=\"ansi-bright-black-fg\">┊</span> GC <span class=\"ansi-bright-black-fg\">(</span>mean ± σ<span class=\"ansi-bright-black-fg\">):  </span>0.00% ± 0.00%\n  █<span class=\"ansi-blue-fg\"> </span><span class=\"ansi-green-fg\">▂</span>                                                          ▁\n  █<span class=\"ansi-blue-fg\">█</span><span class=\"ansi-green-fg\">█</span>█▄▄▃▄▄█▆▁▄▁▄▃▁▃▄▁▁▃▁▁▁▃▁▁▁▁▃▁▁▁▁▁▁▁▃▁▁▁▃▁▁▃▁▁▁▁▁▁▃▁▃▁▁▁▁▇ █\n  91.4 μs<span class=\"ansi-bright-black-fg\">       </span><span class=\"ansi-bright-black-fg\">Histogram: </span><span class=\"ansi-bright-black-fg ansi-bold\">log(</span><span class=\"ansi-bright-black-fg\">frequency</span><span class=\"ansi-bright-black-fg ansi-bold\">)</span><span class=\"ansi-bright-black-fg\"> by time</span>       138 μs <span class=\"ansi-bold\">&lt;</span>\n Memory estimate<span class=\"ansi-bright-black-fg\">: </span><span class=\"ansi-yellow-fg\">0 bytes</span>, allocs estimate<span class=\"ansi-bright-black-fg\">: </span><span class=\"ansi-yellow-fg\">0</span>.</pre>\n```\n:::\n\n:::\n:::\n\n\n### Julia (using JuMP)\n\n::: {.cell execution_count=3}\n``` {.julia .cell-code}\nusing JuMP; using SCIP;\n\nfunction p9()\n  model = Model(SCIP.Optimizer)\n  set_silent(model)\n  @variable(model, a >= 1, Int)\n  @variable(model, b >= 1, Int)\n  @variable(model, c >= 1, Int)\n  @objective(model, Min, a)\n  @constraint(model, pitagorean, a^2 + b^2 == c^2)\n  @constraint(model, sum_1000, a + b + c == 1000)  \n  optimize!(model)    \n  return value(a), value(b), value(c)\nend;\np9()\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\n(200.0, 375.0, 425.0)\n```\n:::\n:::\n\n\n::: {.cell execution_count=4}\n``` {.julia .cell-code}\nusing BenchmarkTools;\n@benchmark p9()\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre>BenchmarkTools.Trial: 56 samples with 1 evaluation.\n Range <span class=\"ansi-bright-black-fg\">(</span><span class=\"ansi-cyan-fg ansi-bold\">min</span> … <span class=\"ansi-magenta-fg\">max</span><span class=\"ansi-bright-black-fg\">):  </span><span class=\"ansi-cyan-fg ansi-bold\">88.545 ms</span> … <span class=\"ansi-magenta-fg\"> 95.198 ms</span>  <span class=\"ansi-bright-black-fg\">┊</span> GC <span class=\"ansi-bright-black-fg\">(</span>min … max<span class=\"ansi-bright-black-fg\">): </span>0.00% … 0.00%\n Time  <span class=\"ansi-bright-black-fg\">(</span><span class=\"ansi-blue-fg ansi-bold\">median</span><span class=\"ansi-bright-black-fg\">):     </span><span class=\"ansi-blue-fg ansi-bold\">89.143 ms               </span><span class=\"ansi-bright-black-fg\">┊</span> GC <span class=\"ansi-bright-black-fg\">(</span>median<span class=\"ansi-bright-black-fg\">):    </span>0.00%\n Time  <span class=\"ansi-bright-black-fg\">(</span><span class=\"ansi-green-fg ansi-bold\">mean</span> ± <span class=\"ansi-green-fg\">σ</span><span class=\"ansi-bright-black-fg\">):   </span><span class=\"ansi-green-fg ansi-bold\">89.372 ms</span> ± <span class=\"ansi-green-fg\">983.382 μs</span>  <span class=\"ansi-bright-black-fg\">┊</span> GC <span class=\"ansi-bright-black-fg\">(</span>mean ± σ<span class=\"ansi-bright-black-fg\">):  </span>0.00% ± 0.00%\n      ▁█▃▁  ▁<span class=\"ansi-blue-fg\">█</span>   <span class=\"ansi-green-fg\"> </span> ▁   ▁                                        \n  ▄▇▁▇████▄▇█<span class=\"ansi-blue-fg\">█</span>▇▄▄<span class=\"ansi-green-fg\">▁</span>▇█▇▇▁█▁▁▁▁▄▄▄▁▁▁▁▁▁▄▁▁▁▁▁▁▁▁▁▁▁▄▁▁▁▁▁▁▁▁▁▁▁▄ ▁\n  88.5 ms<span class=\"ansi-bright-black-fg\">         Histogram: frequency by time</span>         91.8 ms <span class=\"ansi-bold\">&lt;</span>\n Memory estimate<span class=\"ansi-bright-black-fg\">: </span><span class=\"ansi-yellow-fg\">120.80 KiB</span>, allocs estimate<span class=\"ansi-bright-black-fg\">: </span><span class=\"ansi-yellow-fg\">5135</span>.</pre>\n```\n:::\n\n:::\n:::\n\n\n",
    "supporting": [
      "p009_files"
    ],
    "filters": [],
    "includes": {}
  }
}