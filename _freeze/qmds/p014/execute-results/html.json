{
  "hash": "6d2a93a6c645220c0e287d7c357e3339",
  "result": {
    "markdown": "# Problem 14 {.unnumbered}\n\n::: {.callout-note icon=false}\n## Problem\n\n<p>The following iterative sequence is defined for the set of positive integers:</p>\n<ul style=\"list-style-type:none;\">\n<li>$n \\to n/2$ ($n$ is even)</li>\n<li>$n \\to 3n + 1$ ($n$ is odd)</li></ul>\n<p>Using the rule above and starting with $13$, we generate the following sequence:\n$13 \\to 40 \\to 20 \\to 10 \\to 5 \\to 16 \\to 8 \\to 4 \\to 2 \\to 1.$</p>\n<p>It can be seen that this sequence (starting at $13$ and finishing at $1$) contains $10$ terms. Although it has not been proved yet (Collatz Problem), it is thought that all starting numbers finish at $1$.</p>\n<p>Which starting number, under one million, produces the longest chain?</p>\n<p class=\"note\"><b>NOTE:</b> Once the chain starts the terms are allowed to go above one million.</p>\n:::\n\n### Julia\n\n::: {.cell execution_count=1}\n``` {.julia .cell-code}\nfunction collatz(n::Integer)\n    seq = BigInt[]\n\n    s = BigInt(n)\n\n    while s > 1\n        push!(seq, s)\n\n        if s % 2 == 0\n            s = div(s, 2)\n        else\n            s = 3*s + 1\n        end\n    end \n\n    push!(seq, 1)\n    \n    return seq\nend\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\ncollatz (generic function with 1 method)\n```\n:::\n:::\n\n\n::: {.cell execution_count=2}\n``` {.julia .cell-code}\nfunction p14()\n\n    n, max_chain_length = 1, 1\n\n    for i âˆˆ 1:999_999\n        c = collatz(i)\n        l = length(c)\n\n        if l > max_chain_length\n            n, max_chain_length = i, l\n        end\n    end\n\n    return \"The biggest chain starts in $n and has $max_chain_length\"\nend;\n\np14()\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\n\"The biggest chain starts in 837799 and has 525\"\n```\n:::\n:::\n\n\n::: {.cell execution_count=3}\n``` {.julia .cell-code}\nusing BenchmarkTools;\n@benchmark p14()\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre>BenchmarkTools.Trial: 1 sample with 1 evaluation.\n Single result which took <span class=\"ansi-blue-fg\">44.955 s</span> (30.41% GC) to evaluate,\n with a memory estimate of <span class=\"ansi-yellow-fg\">23.36 GiB</span>, over <span class=\"ansi-yellow-fg\">1146910302</span> allocations.</pre>\n```\n:::\n\n:::\n:::\n\n\n",
    "supporting": [
      "p014_files"
    ],
    "filters": [],
    "includes": {}
  }
}