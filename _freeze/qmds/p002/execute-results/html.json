{
  "hash": "0c3c15ec883708b8bfca59f2d60ee918",
  "result": {
    "markdown": "# Problem 2 {.unnumbered}\n\n::: {.callout-note icon=false}\n## Problem\n\n<p>Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with $1$ and $2$, the first $10$ terms will be:\n$1, 2, 3, 5, 8, 13, 21, 34, 55, 89, \\dots$</p>\n<p>By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.</p>\n:::\n\n### Julia\n\n::: {.cell execution_count=1}\n``` {.julia .cell-code}\nfunction p2()\n    a, b = 1, 2\n    sum = 2\n    while true\n        current_fibo_term = a + b\n        current_fibo_term > 4_000_000 && break\n        iseven(current_fibo_term) && (sum += current_fibo_term)\n        a, b = b, current_fibo_term\n    end\n    return sum\nend;\np2()\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\n4613732\n```\n:::\n:::\n\n\n::: {.cell execution_count=2}\n``` {.julia .cell-code}\nusing BenchmarkTools;\n@benchmark p2()\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre>BenchmarkTools.Trial: 10000 samples with 998 evaluations.\n Range <span class=\"ansi-bright-black-fg\">(</span><span class=\"ansi-cyan-fg ansi-bold\">min</span> … <span class=\"ansi-magenta-fg\">max</span><span class=\"ansi-bright-black-fg\">):  </span><span class=\"ansi-cyan-fg ansi-bold\">14.455 ns</span> … <span class=\"ansi-magenta-fg\">35.441 ns</span>  <span class=\"ansi-bright-black-fg\">┊</span> GC <span class=\"ansi-bright-black-fg\">(</span>min … max<span class=\"ansi-bright-black-fg\">): </span>0.00% … 0.00%\n Time  <span class=\"ansi-bright-black-fg\">(</span><span class=\"ansi-blue-fg ansi-bold\">median</span><span class=\"ansi-bright-black-fg\">):     </span><span class=\"ansi-blue-fg ansi-bold\">14.697 ns              </span><span class=\"ansi-bright-black-fg\">┊</span> GC <span class=\"ansi-bright-black-fg\">(</span>median<span class=\"ansi-bright-black-fg\">):    </span>0.00%\n Time  <span class=\"ansi-bright-black-fg\">(</span><span class=\"ansi-green-fg ansi-bold\">mean</span> ± <span class=\"ansi-green-fg\">σ</span><span class=\"ansi-bright-black-fg\">):   </span><span class=\"ansi-green-fg ansi-bold\">17.255 ns</span> ± <span class=\"ansi-green-fg\"> 4.911 ns</span>  <span class=\"ansi-bright-black-fg\">┊</span> GC <span class=\"ansi-bright-black-fg\">(</span>mean ± σ<span class=\"ansi-bright-black-fg\">):  </span>0.00% ± 0.00%\n  █<span class=\"ansi-blue-fg\">▁</span> ▄▂   <span class=\"ansi-green-fg\"> </span>           ▆▃                                  ▂ ▂ ▁\n  █<span class=\"ansi-blue-fg\">█</span>▇██▅▄▃<span class=\"ansi-green-fg\">▃</span>▄▃▄▃▃▃▁▃▁▁▇██▃▃▁▁▁▁▃▁▁▁▃▁▁▁▃▃▁▄▁▁▁▁▁▃▁▃▁▁▃▁▁▃▁▇█▄█ █\n  14.5 ns<span class=\"ansi-bright-black-fg\">      </span><span class=\"ansi-bright-black-fg\">Histogram: </span><span class=\"ansi-bright-black-fg ansi-bold\">log(</span><span class=\"ansi-bright-black-fg\">frequency</span><span class=\"ansi-bright-black-fg ansi-bold\">)</span><span class=\"ansi-bright-black-fg\"> by time</span>      35.4 ns <span class=\"ansi-bold\">&lt;</span>\n Memory estimate<span class=\"ansi-bright-black-fg\">: </span><span class=\"ansi-yellow-fg\">0 bytes</span>, allocs estimate<span class=\"ansi-bright-black-fg\">: </span><span class=\"ansi-yellow-fg\">0</span>.</pre>\n```\n:::\n\n:::\n:::\n\n\n",
    "supporting": [
      "p002_files"
    ],
    "filters": [],
    "includes": {}
  }
}