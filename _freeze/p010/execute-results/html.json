{
  "hash": "851cd29b3273417c35851eab570149ed",
  "result": {
    "markdown": "# Problem 10 {.unnumbered}\n\n::: {.callout-note icon=false}\n## Problem\n\n<p>The sum of the primes below $10$ is $2 + 3 + 5 + 7 = 17$.</p>\n<p>Find the sum of all the primes below two million.</p>\n:::\n\n### Julia\n\n::: {.cell execution_count=1}\n``` {.julia .cell-code}\n# define a function that give prime numbers up to n\nfunction sieve_of_eratosthenes(n::Integer)\n  sieve = trues(n)  # Create a boolean array to mark primes\n  \n  # Set the multiples of primes as false (not prime)\n  for i in 2:isqrt(n)\n    if sieve[i]\n      for j in i^2:i:n\n        sieve[j] = false\n      end\n    end\n  end\n  \n  primes = filter(x -> sieve[x], 2:n)  # Filter out non-primes\n  \n  return primes\nend;\n```\n:::\n\n\n::: {.cell execution_count=2}\n``` {.julia .cell-code}\nfunction p10()\n  sieve_of_eratosthenes(2_000_000) |> sum\nend;\np10()\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\n142913828922\n```\n:::\n:::\n\n\n::: {.cell execution_count=3}\n``` {.julia .cell-code}\nusing BenchmarkTools;\n@benchmark p10()\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre>BenchmarkTools.Trial: 786 samples with 1 evaluation.\n Range <span class=\"ansi-bright-black-fg\">(</span><span class=\"ansi-cyan-fg ansi-bold\">min</span> … <span class=\"ansi-magenta-fg\">max</span><span class=\"ansi-bright-black-fg\">):  </span><span class=\"ansi-cyan-fg ansi-bold\">6.028 ms</span> … <span class=\"ansi-magenta-fg\">  7.115 ms</span>  <span class=\"ansi-bright-black-fg\">┊</span> GC <span class=\"ansi-bright-black-fg\">(</span>min … max<span class=\"ansi-bright-black-fg\">): </span>0.00% … 9.21%\n Time  <span class=\"ansi-bright-black-fg\">(</span><span class=\"ansi-blue-fg ansi-bold\">median</span><span class=\"ansi-bright-black-fg\">):     </span><span class=\"ansi-blue-fg ansi-bold\">6.350 ms               </span><span class=\"ansi-bright-black-fg\">┊</span> GC <span class=\"ansi-bright-black-fg\">(</span>median<span class=\"ansi-bright-black-fg\">):    </span>0.00%\n Time  <span class=\"ansi-bright-black-fg\">(</span><span class=\"ansi-green-fg ansi-bold\">mean</span> ± <span class=\"ansi-green-fg\">σ</span><span class=\"ansi-bright-black-fg\">):   </span><span class=\"ansi-green-fg ansi-bold\">6.365 ms</span> ± <span class=\"ansi-green-fg\">153.753 μs</span>  <span class=\"ansi-bright-black-fg\">┊</span> GC <span class=\"ansi-bright-black-fg\">(</span>mean ± σ<span class=\"ansi-bright-black-fg\">):  </span>1.76% ± 2.59%\n            ▁▁▂ ▅▃▆▂▃▃▄▃▅<span class=\"ansi-blue-fg\">▆</span><span class=\"ansi-green-fg\">█</span>▄▂▁▃▂▃                              \n  ▂▁▁▃▂▃▄▄▆▆█████████████<span class=\"ansi-blue-fg\">█</span><span class=\"ansi-green-fg\">█</span>███████▇▄█▅▅▆▅▃▄▅▅▃▃▂▃▁▄▁▃▃▃▂▁▁▃▂▃ ▄\n  6.03 ms<span class=\"ansi-bright-black-fg\">         Histogram: frequency by time</span>        6.85 ms <span class=\"ansi-bold\">&lt;</span>\n Memory estimate<span class=\"ansi-bright-black-fg\">: </span><span class=\"ansi-yellow-fg\">16.63 MiB</span>, allocs estimate<span class=\"ansi-bright-black-fg\">: </span><span class=\"ansi-yellow-fg\">8</span>.</pre>\n```\n:::\n\n:::\n:::\n\n\n",
    "supporting": [
      "p010_files"
    ],
    "filters": [],
    "includes": {}
  }
}